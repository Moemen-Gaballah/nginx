docker run --name nginx -p 80:80 --hostname ng1 -d nginx

docker inspect nginx

docker stop nginx

docker rm nginx

docker run --name nginx --hostname ng1 -p 80:80 -v /c/Users/moemen.gaballah/Desktop/course-matrials/nginx/practice/html:/usr/share/nginx/html -d nginx // solve it

docker run --name nginx --hostname ng1 -p 80:80 -v C:/Users/moemen.gaballah/Desktop/course-matrials/nginx/practice/html:/usr/share/nginx/html -d nginx


// build image from docker file
docker build . -t nodeapp

docker images

//docker run -p 8080:8080 -d nodeapp
docker run -p 8888:8888 -d nodeapp

docker run -p 8882:8888 --hostname testnode01 -d nodeapp

docker ps

docker run --hostname nodeapp1 --name nodeapp1 -d nodeapp

//docker run --name nginx --hostname ng1 -p 80:8080 -v C:/Users/moemen.gaballah/Desktop/course-matrials/nginx/practice/nginx.conf:/etc/nginx/nginx.conf -d nginx

docker run --name nginx --hostname ng1 -p 80:8888 -v C:/Users/moemen.gaballah/Desktop/course-matrials/nginx/practice/nginx.conf:/etc/nginx/nginx.conf -d nginx

docker run --hostname nodeapp1 --name nodeapp1 -d nodeapp
docker run --hostname nodeapp2 --name nodeapp2 -d nodeapp
docker run --hostname nodeapp3 --name nodeapp3 -d nodeapp

docker network create backendnet

docker network connect backendnet nodeapp1

docker network connect backendnet nodeapp2

docker network connect backendnet nodeapp3

docker network connect backendnet nginx